---
- hosts: localhost
  become: yes
  gather_facts: yes

  vars:
    k3s_install_url: "https://get.k3s.io"
    helm_script_url: "https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
    cert_manager_url: "https://github.com/cert-manager/cert-manager/releases/download/v1.16.3/cert-manager.yaml"

  tasks:
    ##################################################################
    # 1. Configure Raspberry Pi Environment
    ##################################################################
    - name: Set timezone to Zurich
      timezone:
        name: Europe/Zurich

    - name: Update apt cache
      apt:
        update_cache: yes
        force_apt_get: yes

    - name: Upgrade packages
      apt:
        upgrade: dist
        force_apt_get: yes
      register: upgrade_result

    - name: Check if reboot is required
      stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot the system if necessary
      reboot:
        reboot_timeout: 300
      when: reboot_required.stat.exists

    - name: Install required dependencies
      apt:
        name:
          - curl
          - socat
          - apt-transport-https
          - ca-certificates
          - software-properties-common
        state: present

    ##################################################################
    # 2. Install & Start K3s (Lightweight Kubernetes)
    ##################################################################
    - name: Install K3s
      ansible.builtin.shell: "curl -sfL {{ k3s_install_url }} | sh -"
      args:
        creates: /usr/local/bin/k3s

    - name: Enable and start k3s service
      service:
        name: k3s
        state: started
        enabled: true

    ##################################################################
    # 3. Install Helm
    ##################################################################
    - name: Download Helm command line tool
      ansible.builtin.uri:
        url: "{{ helm_script_url }}"
        return_content: true
      register: helm_installer

    - name: Install Helm
      ansible.builtin.command:
        cmd: bash
        stdin: "{{ helm_installer.content }}"
        creates: /usr/local/bin/helm
      environment:
        DESIRED_VERSION: "{{ helm_version | default('') }}"

