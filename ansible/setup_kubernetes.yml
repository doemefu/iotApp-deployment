---
- hosts: localhost
  become: yes
  gather_facts: yes

  tasks:

    ##################################################################
    # 1. Add and Update Helm Repositories
    ##################################################################
    - name: Add Jetstack Helm repository (Cert-Manager)
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"

    - name: Add Traefik Helm repository
      kubernetes.core.helm_repository:
        name: traefik
        repo_url: "https://traefik.github.io/charts"

    - name: Add Prometheus Helm repository
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"

    - name: Update Helm repositories
      kubernetes.core.helm:
        name: repo
        state: present
        update_repo_cache: true

    ##################################################################
    # 2. Install or Upgrade Traefik
    ##################################################################
    - name: Install or upgrade Traefik
      kubernetes.core.helm:
        name: traefik
        chart_ref: traefik/traefik
        release_namespace: traefik
        create_namespace: true
        state: present
        values:
          ports:
            websecure:
              tls:
                enabled: true
          ingressClass:
            enabled: true
            isDefaultClass: true
          persistence:
            enabled: false  # Modify for persistent storage if needed

    - name: Wait for Traefik to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: traefik
        name: traefik
      register: traefik_status
      until: (traefik_status.resources | length > 0) and
        (traefik_status.resources[0].status.availableReplicas is defined and
        traefik_status.resources[0].status.availableReplicas > 0)
      retries: 10
      delay: 15

    ##################################################################
    # 3. Install or Upgrade Cert-Manager
    ##################################################################
    - name: Install or upgrade cert-manager
      kubernetes.core.helm:
        name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        state: present
        values:
          installCRDs: true

    - name: Wait for Cert-Manager to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: cert-manager
        name: cert-manager
      register: cert_manager_status
      until: (cert_manager_status.resources | length > 0) and
        (cert_manager_status.resources[0].status.availableReplicas is defined and
        cert_manager_status.resources[0].status.availableReplicas > 0)
      retries: 10
      delay: 15

    ##################################################################
    # 4. Install Prometheus & Grafana
    ##################################################################
    - name: Install Prometheus
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        release_namespace: monitoring
        create_namespace: true
        state: present
        values:
          prometheus:
            prometheusSpec:
              serviceMonitorSelector: {}

    - name: Wait for Prometheus to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: monitoring
        name: prometheus-kube-prometheus-prometheus
      register: prometheus_status
      until: (prometheus_status.resources | length > 0) and
        (prometheus_status.resources[0].status.availableReplicas is defined and
        prometheus_status.resources[0].status.availableReplicas > 0)
      retries: 10
      delay: 15

    - name: Install Grafana
      kubernetes.core.helm:
        name: grafana
        chart_ref: prometheus-community/grafana
        release_namespace: monitoring
        create_namespace: true
        state: present
        values:
          adminPassword: "admin"

    - name: Wait for Grafana to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: monitoring
        name: grafana
      register: grafana_status
      until: (grafana_status.resources | length > 0) and
        (grafana_status.resources[0].status.availableReplicas is defined and
        grafana_status.resources[0].status.availableReplicas > 0)
      retries: 10
      delay: 15