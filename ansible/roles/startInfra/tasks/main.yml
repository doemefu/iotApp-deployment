---
##################################################################
# 1. Deploy Infrastructure Services
##################################################################
- name: Deploy PostgreSQL service
  kubernetes.core.k8s:
    state: present
    namespace: iot
    definition: "{{ lookup('file', '/home/ubuntu/k8s/1-postgres/postgres-deployment.yaml') | from_yaml }}"

- name: Deploy InfluxDB service
  kubernetes.core.k8s:
    state: present
    namespace: iot
    definition: "{{ lookup('file', '/home/ubuntu/k8s/2-influx/influx-deployment.yaml') | from_yaml }}"

- name: Deploy Mosquitto service
  kubernetes.core.k8s:
    state: present
    namespace: iot
    definition: "{{ lookup('file', '/home/ubuntu/k8s/3-mosquitto/mosquitto-deployment.yaml') | from_yaml }}"

##################################################################
# 2. Wait for infrastructure services to be ready
##################################################################
- name: Wait for all infrastructure pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: iot
  register: infra_pods
  until: infra_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 2
  retries: 30
  delay: 5

##################################################################
# 3. Check for Mosquitto to be up and healthy
##################################################################
- name: "Check for Mosquitto to be up and healthy"
  shell: "timeout 1 mosquitto_sub -h {{ MOSQUITTO_HOST }} -p 1883 -t 'probe/topic' -E -i probe"
  register: mosquitto_ready
  until: mosquitto_ready.rc == 0
  retries: 30
  delay: 5
  changed_when: false

##################################################################
# 4. Check for InfluxDB to be up and healthy
##################################################################
- name: "Check for InfluxDB to be up and healthy"
  uri:
    url: "{{ INFLUXDB_HOST }}/ping"
    method: GET
    status_code: 204
  register: influx_ready
  until: influx_ready.status == 204
  retries: 20
  delay: 5

##################################################################
# 5. Check for PostgreSQL to be up and healthy
##################################################################
- name: "Check for PostgreSQL to be up and healthy"
  shell: "PGUSER=postgres pg_isready -h {{ POSTGRES_HOST }} -d pangea_local_dev"
  register: pg_ready
  until: pg_ready.rc == 0
  retries: 30
  delay: 5
  changed_when: false
