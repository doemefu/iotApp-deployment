---
- hosts: k3s_cluster
  become: yes
  gather_facts: yes

  vars:
    # Example pinned chart versions. Adjust as needed:
    cert_manager_chart_version: "1.16.3"
    prometheus_chart_version: "68.4.4"

    # Where K3s placed the kubeconfig:
    kubeconfig_path: "/etc/rancher/k3s/k3s.yaml"

  tasks:
    ##################################################################
    # 1. Add and Update Helm Repositories
    ##################################################################
    - name: Add or Update Helm repository for Traefik
      kubernetes.core.helm_repository:
        name: traefik
        repo_url: "https://helm.traefik.io/traefik"
        force_update: true

    - name: Add or Update Helm repository for Jetstack
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "https://charts.jetstack.io"
        force_update: true

    - name: Add or Update Prometheus Helm repository
      kubernetes.core.helm_repository:
        name: prometheus-community
        repo_url: "https://prometheus-community.github.io/helm-charts"
        force_update: true

    ##################################################################
    # 2. Install or Upgrade Traefik
    ##################################################################
    - name: Install or upgrade traefik v3
      kubernetes.core.helm:
        release_name: traefik
        chart_ref: traefik/traefik
        release_namespace: traefik
        create_namespace: true
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        wait: true
        values:
          dashboard:
            enabled: true
            domain: traefik.furchert.ch   # Changed from raspi5.local to public domain
          entryPoints:
            web:
              address: ":80"
            websecure:
              address: ":443"
            traefik:
              address: ":9000"
          additionalArguments:
            - --api.insecure=true      # Insecure API for testing; adjust as needed
            - --api.dashboard=true
          providers:
            kubernetesCRD: {}
            kubernetesIngress: {}

    ##################################################################
    # 3. Install or Upgrade Cert-Manager
    ##################################################################
    - name: Install or upgrade cert-manager
      kubernetes.core.helm:
        release_name: cert-manager
        chart_ref: jetstack/cert-manager
        release_namespace: cert-manager
        create_namespace: true
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        wait: true
        values:
          crds:
            enabled: true

    - name: Copy  K8s manifests
      copy:
        src: ../k8s/98-deployment-prod/
        dest: /home/dfurchert/iotAppNew/k8s/98-deployment-prod/

    - name: Deploy ClusterIssuer for Let's Encrypt
      kubernetes.core.k8s:
        state: present
        src: /home/dfurchert/iotAppNew/k8s/98-deployment-prod/cluster-issuer.yaml
        kubeconfig: "{{ kubeconfig_path }}"

    - name: "Wait for ClusterIssuer to be available"
      command: kubectl wait --for=condition=Ready clusterissuer/letsencrypt-prod --timeout=30s
      changed_when: false
      failed_when: false

    ##################################################################
    # 4. Install kube-prometheus-stack (Grafana & Prometheus)
    ##################################################################
    - name: Install kube-prometheus-stack chart
      kubernetes.core.helm:
        name: prometheus
        chart_ref: prometheus-community/kube-prometheus-stack
        chart_version: "{{ prometheus_chart_version }}"
        release_namespace: kube-system
        create_namespace: true
        state: present
        kubeconfig: "{{ kubeconfig_path }}"
        wait: true
        values:
          # ----- Grafana Configuration -----
          grafana:
            # Remove custom subpath settings so Grafana uses its default installation setup.
            ingress:
              enabled: true
              annotations:
                kubernetes.io/ingress.class: "traefik"
                cert-manager.io/cluster-issuer: letsencrypt-prod
              hosts:
                - grafana.furchert.ch   # Expose Grafana on its dedicated subdomain.
              path: /
              pathType: Prefix
              tls:
                - hosts:
                    - grafana.furchert.ch
                  secretName: grafana-tls


          # ----- Prometheus Configuration -----
          prometheus:
            # Remove custom routePrefix/externalUrl settings for standard Prometheus behavior.
            ingress:
              enabled: true
              annotations:
                kubernetes.io/ingress.class: "traefik"
                cert-manager.io/cluster-issuer: letsencrypt-prod
              hosts:
                - prometheus.furchert.ch   # Change host from raspi5.local to public domain.
              path: /
              pathType: Prefix
              tls:
                - hosts:
                    - prometheus.furchert.ch
                  secretName: prometheus-tls

    - name: Copy all K8s manifests
      copy:
        src: ../k8s/00-traefik/
        dest: /home/dfurchert/iotAppNew/k8s/00-traefik/

    - name: "Apply traefik dashboard service"
      kubernetes.core.k8s:
        state: present
        src: "/home/dfurchert/iotAppNew/k8s/00-traefik/traefik-dashboard.yaml"
        kubeconfig: "{{ kubeconfig_path }}"
